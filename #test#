(startEval'(letrec (
             (intersect (lambda (s t) 
               (if (equal? s (quote ()))
                 (quote ())
                 (if (member (car s) t)
                   (cons (car s) (intersect (cdr s) t))
                   (intersect (cdr s) t)))))
             (member (lambda (x s)
                 (if (equal? s (quote ()))
                   (quote #f)
                   (if (equal? x (car s))
                     (quote #t)
                     (member x (cdr s)))))))
           (intersect (quote (a b c d)) (quote (b c d e f)))))